{"ast":null,"code":"import Axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, MY_ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_DELETE_FAIL } from \"../constants/orderConstants\";\n\nconst createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n      payload: order\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data: {\n        data: newOrder\n      }\n    } = await Axios.post(\"/api/orders\", order, {\n      headers: {\n        Authorization: ' Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: newOrder\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: MY_ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/mine\", {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: MY_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders\", {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.get(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELETE_REQUEST,\n      payload: orderId\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await Axios.delete(\"/api/orders/\" + orderId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: ORDER_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { createOrder, detailsOrder, listMyOrders, listOrders, deleteOrder };","map":{"version":3,"sources":["G:/Ecommerce Website/Project-fl-ecommerce/Padmahastha/frontend/src/actions/orderActions.js"],"names":["Axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","MY_ORDER_LIST_SUCCESS","MY_ORDER_LIST_FAIL","MY_ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","createOrder","order","dispatch","getState","type","payload","userSignin","userInfo","data","newOrder","post","headers","Authorization","token","error","message","listMyOrders","get","listOrders","ORDER_LIST_REQUEST","detailsOrder","orderId","deleteOrder","delete"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport {\r\n  ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL,\r\n\r\n  ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, MY_ORDER_LIST_SUCCESS, MY_ORDER_LIST_FAIL, MY_ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL,\r\n   ORDER_DELETE_REQUEST,ORDER_DELETE_SUCCESS,ORDER_DELETE_FAIL} from \"../constants/orderConstants\";\r\n\r\nconst createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_CREATE_REQUEST, payload: order });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data: { data: newOrder } } = await Axios.post(\"/api/orders\", order, {\r\n      headers: {\r\n        Authorization: ' Bearer ' + userInfo.token\r\n      }\r\n    });\r\n    dispatch({ type: ORDER_CREATE_SUCCESS, payload: newOrder });\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_CREATE_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: MY_ORDER_LIST_REQUEST });\r\n      const { userSignin: { userInfo } } = getState();\r\n      const { data } = await Axios.get(\"/api/orders/mine\", {\r\n        headers:\r\n          { Authorization: 'Bearer ' + userInfo.token }\r\n      });\r\n      dispatch({ type: MY_ORDER_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({ type: MY_ORDER_LIST_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\n\r\n\r\n  \r\n\r\nconst listOrders = () => async (dispatch, getState) => {\r\n\r\n    try {\r\n      dispatch({ type: ORDER_LIST_REQUEST });\r\n      const { userSignin: { userInfo } } = getState();\r\n      const { data } = await Axios.get(\"/api/orders\", {\r\n        headers:\r\n          { Authorization: 'Bearer ' + userInfo.token }\r\n      });\r\n      dispatch({ type: ORDER_LIST_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({ type: ORDER_LIST_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\nconst detailsOrder = (orderId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: ORDER_DETAILS_REQUEST, payload: orderId });\r\n    const { userSignin: { userInfo } } = getState();\r\n    const { data } = await Axios.get(\"/api/orders/\" + orderId, {\r\n      headers:\r\n        { Authorization: 'Bearer ' + userInfo.token }\r\n    });\r\n    dispatch({ type: ORDER_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({ type: ORDER_DETAILS_FAIL, payload: error.message });\r\n  }\r\n}\r\n\r\nconst deleteOrder = (orderId) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: ORDER_DELETE_REQUEST, payload: orderId });\r\n      const { userSignin: { userInfo } } = getState();\r\n      const { data } = await Axios.delete(\"/api/orders/\" + orderId, {\r\n        headers:\r\n          { Authorization: 'Bearer ' + userInfo.token }\r\n      });\r\n      dispatch({ type: ORDER_DELETE_SUCCESS, payload: data })\r\n    } catch (error) {\r\n      dispatch({ type: ORDER_DELETE_FAIL, payload: error.message });\r\n    }\r\n  }\r\nexport { createOrder, detailsOrder, listMyOrders, listOrders, deleteOrder };"]},"metadata":{},"sourceType":"module"}