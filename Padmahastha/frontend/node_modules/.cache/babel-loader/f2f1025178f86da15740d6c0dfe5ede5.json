{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/product\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = ({\n  product\n} = async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getStare();\n    const {\n      data\n    } = await Axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer' + token\n      }\n    });\n  } catch (error) {}\n});\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/product/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct };","map":{"version":3,"sources":["G:/Ecommerce Website/Project-fl-ecommerce/Padmahastha/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","PRODUCT_SAVE_REQUEST","userSignin","userInfo","getStare","Axios","post","headers","token","detailsProduct","productId"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,EACIC,uBADJ,EAC4BC,uBAD5B,EACoDC,oBADpD,QACgF,+BADhF;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC5C,MAAG;AACFA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACT;AAAN,KAAD,CAAR;AACA,UAAM;AAACU,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,cAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACR,oBAAN;AAA4BW,MAAAA,OAAO,EAACF;AAApC,KAAD,CAAR;AAEA,GALD,CAMA,OAAMG,KAAN,EAAY;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACP,iBAAN;AAAyBU,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAvC,KAAD,CAAR;AACC;AAEA,CAXJ;;AAaG,MAAMC,WAAW,IAAG;AAACC,EAAAA;AAAD,IAAY,OAAOR,QAAP,EAAgBS,QAAhB,KAA4B;AACxD,MAAI;AACAT,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACS,oBAAN;AAA2BN,MAAAA,OAAO,EAACI;AAAnC,KAAD,CAAR;AACA,UAAM;AAACG,MAAAA,UAAU,EAAC;AAACC,QAAAA;AAAD;AAAZ,QAA0BC,QAAQ,EAAxC;AACA,UAAM;AAACX,MAAAA;AAAD,QAAS,MAAMY,KAAK,CAACC,IAAN,CAAW,eAAX,EAA2BP,OAA3B,EAAmC;AAACQ,MAAAA,OAAO,EAAC;AAC7D,yBAAiB,WAAWC;AADiC;AAAT,KAAnC,CAArB;AAGH,GAND,CAME,OAAOZ,KAAP,EAAc,CAEf;AACJ,CAVgB,CAAjB;;AAYA,MAAMa,cAAc,GAAIC,SAAD,IAAc,MAAOnB,QAAP,IAAkB;AACnD,MAAG;AACCA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACN,uBAAN;AAA8BS,MAAAA,OAAO,EAAEe;AAAvC,KAAD,CAAR;AACA,UAAK;AAACjB,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,kBAAkBgB,SAA5B,CAApB;AACAnB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,uBAAP;AAAgCQ,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACH,GAJD,CAKA,OAAOG,KAAP,EAAc;AACVL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAACJ,oBAAN;AAA2BO,MAAAA,OAAO,EAACC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACH;AACJ,CATD;;AAWH,SAAQP,YAAR,EAAsBmB,cAAtB","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\r\nimport axios from 'axios';\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n   try{\r\n    dispatch({type:PRODUCT_LIST_REQUEST});\r\n    const {data} = await axios.get(\"/api/product\");\r\n    dispatch({type:PRODUCT_LIST_SUCCESS, payload:data});\r\n\r\n   }\r\n   catch(error){\r\n   dispatch({type:PRODUCT_LIST_FAIL, payload:error.message});\r\n   }\r\n\r\n   }\r\n\r\n   const saveProduct = {product} = async (dispatch,getState) =>{\r\n       try {\r\n           dispatch({type:PRODUCT_SAVE_REQUEST,payload:product});\r\n           const {userSignin:{userInfo}} = getStare();\r\n           const {data} = await Axios.post('/api/products',product,{headers:{\r\n               'Authorization': 'Bearer' + token\r\n           }})\r\n       } catch (error) {\r\n           \r\n       }\r\n   }\r\n    \r\n   const detailsProduct = (productId)=> async (dispatch)=>{\r\n       try{\r\n           dispatch({type:PRODUCT_DETAILS_REQUEST,payload: productId});\r\n           const{data} = await axios.get(\"/api/product/\" + productId);\r\n           dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n       }\r\n       catch (error) {\r\n           dispatch({type:PRODUCT_DETAILS_FAIL,payload:error.message});\r\n       }\r\n   }\r\n\r\nexport {listProducts, detailsProduct }"]},"metadata":{},"sourceType":"module"}