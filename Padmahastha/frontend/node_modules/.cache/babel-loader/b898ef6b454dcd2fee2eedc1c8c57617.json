{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST } from \"../constants/productConstants\";\nimport axios from 'axios';\nimport Axios from \"axios\";\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n\n    if (product._id) {\n      const {\n        data\n      } = await Axios.post('/api/products', product, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n    } else {\n      const {\n        data\n      } = await Axios.put('/api/products/' + product._id, {\n        headers: {\n          'Authorization': 'Bearer' + userInfo.token\n        }\n      });\n    }\n\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/product/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst deleteProduct = productId => async (dispatch, getState) => {\n  try {\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.delete(\"/api/products/\" + productId, {\n      headers: {\n        Authorization: 'Bearer ' + userInfo.token\n      }\n    });\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n      payload: data,\n      success: true\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct, saveProduct, deleteProduct };","map":{"version":3,"sources":["G:/Ecommerce Website/Project-fl-ecommerce/Padmahastha/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","axios","Axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","userSignin","userInfo","_id","post","headers","token","put","detailsProduct","productId","deleteProduct","delete","Authorization","success"],"mappings":"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","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL, PRODUCT_SAVE_REQUEST, PRODUCT_SAVE_SUCCESS, PRODUCT_SAVE_FAIL, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_DELETE_REQUEST } from \"../constants/productConstants\";\r\nimport axios from 'axios';\r\nimport Axios from \"axios\";\r\n\r\nconst listProducts = () => async (dispatch) => {\r\n   try{\r\n    dispatch({type:PRODUCT_LIST_REQUEST});\r\n    const {data} = await axios.get(\"/api/products\");\r\n    dispatch({type:PRODUCT_LIST_SUCCESS, payload:data});\r\n\r\n   }\r\n   catch(error){\r\n   dispatch({type:PRODUCT_LIST_FAIL, payload:error.message});\r\n   }\r\n\r\n   }\r\n\r\n   const saveProduct = (product) => async (dispatch,getState) =>{\r\n       try {\r\n           dispatch({type:PRODUCT_SAVE_REQUEST,payload:product});\r\n           const {userSignin:{userInfo}} = getState();\r\n           if(product._id){\r\n            const {data} = await Axios.post('/api/products',product,{headers:{\r\n                'Authorization': 'Bearer' + userInfo.token\r\n            }\r\n        });\r\n           } else{\r\n            const {data} = await Axios.put('/api/products/' + product._id,{headers:{\r\n                'Authorization': 'Bearer' + userInfo.token\r\n            }});\r\n           }\r\n           \r\n           dispatch({type:PRODUCT_SAVE_SUCCESS, payload:data})\r\n       } catch (error) {\r\n        dispatch({type:PRODUCT_SAVE_FAIL, payload:error.message})\r\n           \r\n       }\r\n   }\r\n    \r\n   const detailsProduct = (productId)=> async (dispatch)=>{\r\n       try{\r\n           dispatch({type:PRODUCT_DETAILS_REQUEST,payload: productId});\r\n           const{data} = await axios.get(\"/api/product/\" + productId);\r\n           dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\r\n       }\r\n       catch (error) {\r\n           dispatch({type:PRODUCT_DETAILS_FAIL,payload:error.message});\r\n       }\r\n   }\r\n\r\n   const deleteProduct = (productId) => async (dispatch, getState) => {\r\n    try {\r\n      const { userSignin: { userInfo } } = getState();\r\n      dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n      const { data } = await axios.delete(\"/api/products/\" + productId, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token\r\n        }\r\n      });\r\n      dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n    } catch (error) {\r\n      dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n  \r\n    }\r\n  }\r\n  \r\nexport {listProducts, detailsProduct , saveProduct,deleteProduct}"]},"metadata":{},"sourceType":"module"}